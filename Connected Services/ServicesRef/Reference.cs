//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotel_Application_445.ServicesRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicesRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        bool login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        bool register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        System.Threading.Tasks.Task<bool> registerAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        bool delete(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HashPassword", ReplyAction="http://tempuri.org/IService1/HashPasswordResponse")]
        string HashPassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HashPassword", ReplyAction="http://tempuri.org/IService1/HashPasswordResponse")]
        System.Threading.Tasks.Task<string> HashPasswordAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerifyPassword", ReplyAction="http://tempuri.org/IService1/VerifyPasswordResponse")]
        bool VerifyPassword(string enteredPassword, string storedPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerifyPassword", ReplyAction="http://tempuri.org/IService1/VerifyPasswordResponse")]
        System.Threading.Tasks.Task<bool> VerifyPasswordAsync(string enteredPassword, string storedPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewRooms", ReplyAction="http://tempuri.org/IService1/AddNewRoomsResponse")]
        bool AddNewRooms(string type, int quantity, string description, float cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewRooms", ReplyAction="http://tempuri.org/IService1/AddNewRoomsResponse")]
        System.Threading.Tasks.Task<bool> AddNewRoomsAsync(string type, int quantity, string description, float cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifyRoomQuantity", ReplyAction="http://tempuri.org/IService1/ModifyRoomQuantityResponse")]
        bool ModifyRoomQuantity(string roomType, int newQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifyRoomQuantity", ReplyAction="http://tempuri.org/IService1/ModifyRoomQuantityResponse")]
        System.Threading.Tasks.Task<bool> ModifyRoomQuantityAsync(string roomType, int newQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PromoteToStaff", ReplyAction="http://tempuri.org/IService1/PromoteToStaffResponse")]
        string PromoteToStaff(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PromoteToStaff", ReplyAction="http://tempuri.org/IService1/PromoteToStaffResponse")]
        System.Threading.Tasks.Task<string> PromoteToStaffAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRoomSelection", ReplyAction="http://tempuri.org/IService1/AddRoomSelectionResponse")]
        bool AddRoomSelection(string roomType, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRoomSelection", ReplyAction="http://tempuri.org/IService1/AddRoomSelectionResponse")]
        System.Threading.Tasks.Task<bool> AddRoomSelectionAsync(string roomType, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRoomSelection", ReplyAction="http://tempuri.org/IService1/DeleteRoomSelectionResponse")]
        bool DeleteRoomSelection(string roomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRoomSelection", ReplyAction="http://tempuri.org/IService1/DeleteRoomSelectionResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoomSelectionAsync(string roomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAllRoomSelections", ReplyAction="http://tempuri.org/IService1/DeleteAllRoomSelectionsResponse")]
        bool DeleteAllRoomSelections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAllRoomSelections", ReplyAction="http://tempuri.org/IService1/DeleteAllRoomSelectionsResponse")]
        System.Threading.Tasks.Task<bool> DeleteAllRoomSelectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isStaff", ReplyAction="http://tempuri.org/IService1/isStaffResponse")]
        bool isStaff(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isStaff", ReplyAction="http://tempuri.org/IService1/isStaffResponse")]
        System.Threading.Tasks.Task<bool> isStaffAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllRoomBookings", ReplyAction="http://tempuri.org/IService1/getAllRoomBookingsResponse")]
        string getAllRoomBookings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllRoomBookings", ReplyAction="http://tempuri.org/IService1/getAllRoomBookingsResponse")]
        System.Threading.Tasks.Task<string> getAllRoomBookingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllAvailable", ReplyAction="http://tempuri.org/IService1/getAllAvailableResponse")]
        string getAllAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllAvailable", ReplyAction="http://tempuri.org/IService1/getAllAvailableResponse")]
        System.Threading.Tasks.Task<string> getAllAvailableAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Hotel_Application_445.ServicesRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Hotel_Application_445.ServicesRef.IService1>, Hotel_Application_445.ServicesRef.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool login(string username, string password) {
            return base.Channel.login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string username, string password) {
            return base.Channel.loginAsync(username, password);
        }
        
        public bool register(string username, string password) {
            return base.Channel.register(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> registerAsync(string username, string password) {
            return base.Channel.registerAsync(username, password);
        }
        
        public bool delete(string username) {
            return base.Channel.delete(username);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(string username) {
            return base.Channel.deleteAsync(username);
        }
        
        public string HashPassword(string password) {
            return base.Channel.HashPassword(password);
        }
        
        public System.Threading.Tasks.Task<string> HashPasswordAsync(string password) {
            return base.Channel.HashPasswordAsync(password);
        }
        
        public bool VerifyPassword(string enteredPassword, string storedPasswordHash) {
            return base.Channel.VerifyPassword(enteredPassword, storedPasswordHash);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyPasswordAsync(string enteredPassword, string storedPasswordHash) {
            return base.Channel.VerifyPasswordAsync(enteredPassword, storedPasswordHash);
        }
        
        public bool AddNewRooms(string type, int quantity, string description, float cost) {
            return base.Channel.AddNewRooms(type, quantity, description, cost);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewRoomsAsync(string type, int quantity, string description, float cost) {
            return base.Channel.AddNewRoomsAsync(type, quantity, description, cost);
        }
        
        public bool ModifyRoomQuantity(string roomType, int newQuantity) {
            return base.Channel.ModifyRoomQuantity(roomType, newQuantity);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyRoomQuantityAsync(string roomType, int newQuantity) {
            return base.Channel.ModifyRoomQuantityAsync(roomType, newQuantity);
        }
        
        public string PromoteToStaff(string username) {
            return base.Channel.PromoteToStaff(username);
        }
        
        public System.Threading.Tasks.Task<string> PromoteToStaffAsync(string username) {
            return base.Channel.PromoteToStaffAsync(username);
        }
        
        public bool AddRoomSelection(string roomType, int quantity) {
            return base.Channel.AddRoomSelection(roomType, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoomSelectionAsync(string roomType, int quantity) {
            return base.Channel.AddRoomSelectionAsync(roomType, quantity);
        }
        
        public bool DeleteRoomSelection(string roomType) {
            return base.Channel.DeleteRoomSelection(roomType);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoomSelectionAsync(string roomType) {
            return base.Channel.DeleteRoomSelectionAsync(roomType);
        }
        
        public bool DeleteAllRoomSelections() {
            return base.Channel.DeleteAllRoomSelections();
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAllRoomSelectionsAsync() {
            return base.Channel.DeleteAllRoomSelectionsAsync();
        }
        
        public bool isStaff(string username) {
            return base.Channel.isStaff(username);
        }
        
        public System.Threading.Tasks.Task<bool> isStaffAsync(string username) {
            return base.Channel.isStaffAsync(username);
        }
        
        public string getAllRoomBookings() {
            return base.Channel.getAllRoomBookings();
        }
        
        public System.Threading.Tasks.Task<string> getAllRoomBookingsAsync() {
            return base.Channel.getAllRoomBookingsAsync();
        }
        
        public string getAllAvailable() {
            return base.Channel.getAllAvailable();
        }
        
        public System.Threading.Tasks.Task<string> getAllAvailableAsync() {
            return base.Channel.getAllAvailableAsync();
        }
    }
}
